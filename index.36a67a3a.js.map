{"mappings":"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","sources":["src/_warnings.js","src/_pet.js","src/_states.js","src/_buttons.js","src/_launch.js"],"sourcesContent":["import { pet, statesMap } from './_pet';\nimport { timer } from './_launch';\n\nexport let overcare = {\n  messages: {\n    earlyFood: \"Isn't too early for lunch?\",\n    tooMuchFood: \"I'm feed up, please, no more!\",\n\n    earlyClean: 'Everything is clean, thanks!!',\n    tooMuchClean: \"I don't need to be cleaned, thanks!!\",\n\n    starvingToSleep: 'I cannot sleep so hungry!!',\n    dirtyToSleep: 'I cannot sleep so dirty!!',\n    stillSleeping: \"I'm still sleeping!\",\n    happyToSleep: \"I'm so happy, I cannot sleep!!\",\n    earlyToSleep: \"Isn't early for sleeping?\",\n  },\n  toggleHideModal(hidden) {\n    document.querySelector('.modal').classList.toggle('hidden', hidden);\n  },\n  showInfoModal(msg) {\n    timer.modalTime.countDown = 0;\n    document.querySelector('.modal-inner').innerHTML = this.messages[msg];\n    this.toggleHideModal(false);\n  },\n  feedUpCheck() {\n    if (pet.currentState !== 'hungry') {\n      if (statesMap.idling.nextState === 'hungry') {\n        this.showInfoModal('earlyFood');\n      } else {\n        this.showInfoModal('tooMuchFood');\n      }\n    } else {\n      this.toggleHideModal(true);\n    }\n  },\n  cleanCheck() {\n    if (pet.currentState !== 'pooping' && pet.currentState !== 'pooped') {\n      if (statesMap.idling.nextState === 'pooping') {\n        this.showInfoModal('earlyClean');\n      } else {\n        this.showInfoModal('tooMuchClean');\n      }\n    } else {\n      this.toggleHideModal(true);\n    }\n  },\n  sleepCheck() {\n    let state = pet.currentState;\n    switch (state) {\n      case 'hungry':\n        this.showInfoModal('starvingToSleep');\n        break;\n      case 'pooped':\n      case 'poop-bag':\n        this.showInfoModal('dirtyToSleep');\n        break;\n      case 'sleep':\n        this.showInfoModal('stillSleeping');\n        break;\n      case 'celebrate':\n        this.showInfoModal('happyToSleep');\n        break;\n      default:\n        if (timer.getNexTimeToRain() >= 25) {\n          this.showInfoModal('earlyToSleep');\n        }\n        break;\n    }\n  },\n};\n","//██████╗ ███████╗████████╗       ██╗        ██████╗ ██████╗                ██╗      ███████╗████████╗ █████╗ ████████╗███████╗███████╗\r\n//██╔══██╗██╔════╝╚══██╔══╝       ██║       ██╔════╝██╔═══██╗               ╚██╗     ██╔════╝╚══██╔══╝██╔══██╗╚══██╔══╝██╔════╝██╔════╝\r\n//██████╔╝█████╗     ██║       ████████╗    ██║     ██║   ██║    █████╗█████╗╚██╗    ███████╗   ██║   ███████║   ██║   █████╗  ███████╗\r\n//██╔═══╝ ██╔══╝     ██║       ██╔═██╔═╝    ██║     ██║   ██║    ╚════╝╚════╝██╔╝    ╚════██║   ██║   ██╔══██║   ██║   ██╔══╝  ╚════██║\r\n//██║     ███████╗   ██║       ██████║      ╚██████╗╚██████╔╝               ██╔╝     ███████║   ██║   ██║  ██║   ██║   ███████╗███████║\r\n//╚═╝     ╚══════╝   ╚═╝       ╚═════╝       ╚═════╝ ╚═════╝                ╚═╝      ╚══════╝   ╚═╝   ╚═╝  ╚═╝   ╚═╝   ╚══════╝╚══════╝\r\n\r\nimport { timer } from './_launch.js';\r\nimport { overcare } from './_warnings.js';\r\nimport { gameRunner } from './_states.js';\r\n\r\nexport let randomTime = Math.round(5 * Math.random() + 5);\r\n\r\nexport const statesMap = {\r\n  started: { nextState: 'egg' },\r\n  egg: { nextState: 'idling', nextActionTime: 5 },\r\n  idling: { nextState: 'hungry', nextActionTime: 6 }, // nextState: hungry or pooping or sleep\r\n  hungry: { nextState: 'eating', nextActionTime: 3 * 3, deadly: true },\r\n  eating: { nextState: 'celebrate', nextActionTime: 3 },\r\n  celebrate: { nextState: 'idling', nextActionTime: 5 * 2 },\r\n  pooping: { nextState: 'pooped', nextActionTime: 5 },\r\n  pooped: { nextState: 'poop-bag', nextActionTime: 15, deadly: true },\r\n  'poop-bag': { nextState: 'celebrate', nextActionTime: 3 },\r\n  dead: { nextState: 'dead' },\r\n  sleep: { nextState: 'idling', nextActionTime: 10, prevState: 'hungry' },\r\n  rain: { nextState: 'idling', nextActionTime: 10 },\r\n};\r\n\r\nexport let pet = {\r\n  currentState: 'started',\r\n\r\n  //pet and UI states-changes\r\n  changesAction() {\r\n    timer.waitingTime(statesMap[this.currentState].nextActionTime);\r\n  },\r\n  checkStatus() {\r\n    if (timer.getNexTimeToRain() < 0) {\r\n      timer.rainingChances.countDown = 0;\r\n      pet.currentState = 'rain';\r\n      gameRunner.moodPetSwitcher(pet.currentState);\r\n    } else if (timer.getNextTimeToSleep() < 0) {\r\n      timer.dayLength.countDown = 0;\r\n      pet.currentState = 'sleep';\r\n      gameRunner.moodPetSwitcher(pet.currentState);\r\n    }\r\n  },\r\n  hatch() {\r\n    timer.rainingChances.countDown = 0;\r\n    timer.dayLength.countDown = 0;\r\n    timer.modalTime.countDown = -5;\r\n    document.querySelector('.modal').classList.toggle('hidden', true);\r\n  },\r\n  isIdling() {\r\n    document.querySelector(`.day`).classList.toggle('night', false);\r\n    document.querySelector(`.foreground-rain`).style.display = 'none';\r\n    if (statesMap.idling.nextState === 'sleep') {\r\n      statesMap.idling.nextState = statesMap.sleep.prevState;\r\n    }\r\n  },\r\n  isCelebrating() {\r\n    document.querySelector(`.poop-bag`).classList.toggle('hidden', true);\r\n  },\r\n  isCleaning() {\r\n    document.querySelector(`.poop-bag`).classList.toggle('hidden', false);\r\n  },\r\n  isDead() {\r\n    document.querySelector('.modal-inner').innerHTML = overcare.messages.start;\r\n    document.querySelector(`.modal`).classList.toggle('hidden', false);\r\n    statesMap.idling.nextState = 'hungry';\r\n    pet.currentState = 'started';\r\n  },\r\n  isSleeping() {\r\n    document.querySelector(`.day`).classList.toggle('night', true);\r\n    timer.dayLength.countDown = 0;\r\n  },\r\n  isRaining() {\r\n    document.querySelector(`.foreground-rain`).style.display = 'initial';\r\n  },\r\n\r\n  //action-buttons functions\r\n  orderFeed() {\r\n    overcare.feedUpCheck();\r\n    if (this.currentState === 'hungry') {\r\n      timer.timeToChange = 0;\r\n      statesMap.idling.nextState = 'pooping';\r\n    }\r\n  },\r\n  orderClean() {\r\n    overcare.cleanCheck();\r\n    if (this.currentState === 'pooped') {\r\n      timer.timeToChange = 0;\r\n      statesMap.idling.nextState = 'hungry';\r\n    }\r\n  },\r\n  orderSleep() {\r\n    overcare.sleepCheck();\r\n    if (this.currentState === 'idling' && timer.getNexTimeToRain() < 25) {\r\n      statesMap.sleep.prevState = statesMap.idling.nextState;\r\n      timer.timeToChange = 0;\r\n      statesMap.idling.nextState = 'sleep';\r\n    }\r\n  },\r\n};\r\n","//██████╗ ███████╗████████╗       ██╗        ██████╗ ██████╗                ██╗      ███████╗██╗    ██╗██╗████████╗ ██████╗██╗  ██╗███████╗██████╗\r\n//██╔══██╗██╔════╝╚══██╔══╝       ██║       ██╔════╝██╔═══██╗               ╚██╗     ██╔════╝██║    ██║██║╚══██╔══╝██╔════╝██║  ██║██╔════╝██╔══██╗\r\n//██████╔╝█████╗     ██║       ████████╗    ██║     ██║   ██║    █████╗█████╗╚██╗    ███████╗██║ █╗ ██║██║   ██║   ██║     ███████║█████╗  ██████╔╝\r\n//██╔═══╝ ██╔══╝     ██║       ██╔═██╔═╝    ██║     ██║   ██║    ╚════╝╚════╝██╔╝    ╚════██║██║███╗██║██║   ██║   ██║     ██╔══██║██╔══╝  ██╔══██╗\r\n//██║     ███████╗   ██║       ██████║      ╚██████╗╚██████╔╝               ██╔╝     ███████║╚███╔███╔╝██║   ██║   ╚██████╗██║  ██║███████╗██║  ██║\r\n//╚═╝     ╚══════╝   ╚═╝       ╚═════╝       ╚═════╝ ╚═════╝                ╚═╝      ╚══════╝ ╚══╝╚══╝ ╚═╝   ╚═╝    ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝\r\n\r\nimport { pet } from './_pet.js';\r\n\r\nexport function runUserAction(icon) {\r\n  if (pet.currentState === 'started' || pet.currentState === 'dead') {\r\n    pet.currentState = 'egg';\r\n    gameRunner.moodPetSwitcher('egg');\r\n    return;\r\n  }\r\n  switch (icon) {\r\n    case 'fish':\r\n      pet.orderFeed();\r\n      break;\r\n    case 'poop':\r\n      pet.orderClean();\r\n      break;\r\n    case 'weather':\r\n      pet.orderSleep();\r\n      break;\r\n  }\r\n  return pet.currentState;\r\n}\r\n\r\nexport const gameRunner = {\r\n  simpleStates: ['started', 'hungry', 'eating', 'pooping', 'pooped'],\r\n  moodPetSwitcher(state) {\r\n    document.querySelector('.fox').className = `fox fox-${state}`;\r\n    state = pet.currentState;\r\n\r\n    //states only affected by time\r\n    if (this.simpleStates.includes(state)) {\r\n      pet.changesAction();\r\n    }\r\n\r\n    //states where the UI changes\r\n    if (state === 'idling') {\r\n      pet.isIdling();\r\n    } else if (state === 'celebrate') {\r\n      pet.isCelebrating();\r\n    } else if (state === 'poop-bag') {\r\n      pet.isCleaning();\r\n    } else if (state === 'sleep') {\r\n      pet.isSleeping();\r\n    } else if (state === 'rain') {\r\n      pet.isRaining();\r\n    } else if (state === 'egg') {\r\n      pet.hatch();\r\n    }\r\n    pet.changesAction();\r\n\r\n    //dead or infinite states\r\n    if (state === 'dead') {\r\n      pet.isDead();\r\n    }\r\n  },\r\n};\r\n","//██████╗ ███████╗████████╗       ██╗        ██████╗ ██████╗                ██╗      ██████╗ ██╗   ██╗████████╗████████╗ ██████╗ ███╗   ██╗███████╗\r\n//██╔══██╗██╔════╝╚══██╔══╝       ██║       ██╔════╝██╔═══██╗               ╚██╗     ██╔══██╗██║   ██║╚══██╔══╝╚══██╔══╝██╔═══██╗████╗  ██║██╔════╝\r\n//██████╔╝█████╗     ██║       ████████╗    ██║     ██║   ██║    █████╗█████╗╚██╗    ██████╔╝██║   ██║   ██║      ██║   ██║   ██║██╔██╗ ██║███████╗\r\n//██╔═══╝ ██╔══╝     ██║       ██╔═██╔═╝    ██║     ██║   ██║    ╚════╝╚════╝██╔╝    ██╔══██╗██║   ██║   ██║      ██║   ██║   ██║██║╚██╗██║╚════██║\r\n//██║     ███████╗   ██║       ██████║      ╚██████╗╚██████╔╝               ██╔╝     ██████╔╝╚██████╔╝   ██║      ██║   ╚██████╔╝██║ ╚████║███████║\r\n//╚═╝     ╚══════╝   ╚═╝       ╚═════╝       ╚═════╝ ╚═════╝                ╚═╝      ╚═════╝  ╚═════╝    ╚═╝      ╚═╝    ╚═════╝ ╚═╝  ╚═══╝╚══════╝\r\n\r\nimport { runUserAction } from './_states.js';\r\n\r\n//lighting selected icons through buttons\r\n\r\nconst icons = ['fish', 'poop', 'weather'];\r\nconst iconHighlighted = function iconClassModifier(icon, show) {\r\n  document.querySelector(`.${icons[icon]}-icon`).classList.toggle('highlighted', show);\r\n};\r\n\r\nexport function initButtons() {\r\n  let selectedIcon = 0;\r\n\r\n  function leftButtonClick() {\r\n    iconHighlighted(selectedIcon, false);\r\n    selectedIcon > 0 ? selectedIcon-- : (selectedIcon = 2);\r\n    iconHighlighted(selectedIcon, true);\r\n  }\r\n  function rightButtonClick() {\r\n    iconHighlighted(selectedIcon, false);\r\n    selectedIcon < 2 ? selectedIcon++ : (selectedIcon = 0);\r\n    iconHighlighted(selectedIcon, true);\r\n  }\r\n  function middleButtonClick() {\r\n    runUserAction(icons[selectedIcon]);\r\n  }\r\n\r\n  document.querySelector('.left-btn').addEventListener('click', leftButtonClick);\r\n  document.querySelector('.right-btn').addEventListener('click', rightButtonClick);\r\n  document.querySelector('.middle-btn').addEventListener('click', middleButtonClick);\r\n}\r\n","//██████╗ ███████╗████████╗       ██╗        ██████╗ ██████╗                ██╗      ██╗      █████╗ ██╗   ██╗███╗   ██╗ ██████╗██╗  ██╗███████╗██████╗\r\n//██╔══██╗██╔════╝╚══██╔══╝       ██║       ██╔════╝██╔═══██╗               ╚██╗     ██║     ██╔══██╗██║   ██║████╗  ██║██╔════╝██║  ██║██╔════╝██╔══██╗\r\n//██████╔╝█████╗     ██║       ████████╗    ██║     ██║   ██║    █████╗█████╗╚██╗    ██║     ███████║██║   ██║██╔██╗ ██║██║     ███████║█████╗  ██████╔╝\r\n//██╔═══╝ ██╔══╝     ██║       ██╔═██╔═╝    ██║     ██║   ██║    ╚════╝╚════╝██╔╝    ██║     ██╔══██║██║   ██║██║╚██╗██║██║     ██╔══██║██╔══╝  ██╔══██╗\r\n//██║     ███████╗   ██║       ██████║      ╚██████╗╚██████╔╝               ██╔╝     ███████╗██║  ██║╚██████╔╝██║ ╚████║╚██████╗██║  ██║███████╗██║  ██║\r\n//╚═╝     ╚══════╝   ╚═╝       ╚═════╝       ╚═════╝ ╚═════╝                ╚═╝      ╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═══╝ ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝\r\n\r\nimport { initButtons } from './_buttons.js';\r\nimport { pet, statesMap } from './_pet.js';\r\nimport { gameRunner } from './_states.js';\r\n\r\n//Set game timers and speed\r\nexport let timer = {\r\n  //custom settings\r\n  tempo: 1000, //ms\r\n  rainingChances: { percent: 40, countDown: 0 },\r\n  dayLength: { time: 50, countDown: 0 },\r\n  modalTime: { time: 5, countDown: -5 },\r\n\r\n  //DO NOT TOUCH\r\n\r\n  clock: 0,\r\n  nextClock: 0,\r\n  timeToChange: 0,\r\n  waitingTime(spare) {\r\n    this.timeToChange = this.clock + spare;\r\n  },\r\n  getNexTimeToRain() {\r\n    let nextTimeToRain = Math.round((20 * 100) / this.rainingChances.percent) + this.rainingChances.countDown;\r\n    return nextTimeToRain;\r\n  },\r\n  getNextTimeToSleep() {\r\n    return this.dayLength.time + this.dayLength.countDown;\r\n  },\r\n  timeToHideModal() {\r\n    return this.modalTime.time + this.modalTime.countDown;\r\n  },\r\n};\r\n\r\ninitButtons();\r\nfunction initGame() {\r\n  function setTimer() {\r\n    const now = Date.now();\r\n    if (timer.nextClock <= now) {\r\n      timer.clock++;\r\n      timer.nextClock = now + timer.tempo;\r\n\r\n      timer.rainingChances.countDown--;\r\n      timer.dayLength.countDown--;\r\n      timer.modalTime.countDown--;\r\n\r\n      //modal clock\r\n      if (timer.timeToHideModal() === 0) {\r\n        document.querySelector('.modal').classList.toggle('hidden', true);\r\n      }\r\n\r\n      //general clock\r\n      if (timer.timeToChange === timer.clock && timer.timeToChange > 0) {\r\n        if (statesMap[pet.currentState].deadly) {\r\n          pet.currentState = 'dead';\r\n        }\r\n        pet.currentState = statesMap[pet.currentState].nextState;\r\n        gameRunner.moodPetSwitcher(pet.currentState);\r\n      } else if (timer.timeToChange <= timer.clock && pet.currentState !== 'started') {\r\n        pet.currentState = statesMap[pet.currentState].nextState;\r\n        gameRunner.moodPetSwitcher(pet.currentState);\r\n      } else if (pet.currentState === 'idling') {\r\n        pet.checkStatus();\r\n      } else {\r\n      }\r\n    }\r\n    requestAnimationFrame(setTimer);\r\n  }\r\n  requestAnimationFrame(setTimer);\r\n}\r\n\r\ninitGame();\r\n"],"names":["$4f466bae817f5f5d$export$d0a127d8dcd652e4","messages","earlyFood","tooMuchFood","earlyClean","tooMuchClean","starvingToSleep","dirtyToSleep","stillSleeping","happyToSleep","earlyToSleep","toggleHideModal","hidden","document","querySelector","classList","toggle","showInfoModal","msg","$8ce41509cd0bc228$export$9dc4ecf953986f04","modalTime","countDown","innerHTML","this","feedUpCheck","$f9e7f49d475d63c5$export$9821ef66b1d17638","currentState","$f9e7f49d475d63c5$export$23baa4a0a9af1661","idling","nextState","cleanCheck","sleepCheck","getNexTimeToRain","Math","round","random","started","egg","nextActionTime","hungry","deadly","eating","celebrate","pooping","pooped","dead","sleep","prevState","rain","changesAction","waitingTime","checkStatus","rainingChances","$449d3644e80bad01$export$cd3d1cd7ad96adc2","moodPetSwitcher","getNextTimeToSleep","dayLength","hatch","isIdling","style","display","isCelebrating","isCleaning","isDead","start","isSleeping","isRaining","orderFeed","timeToChange","orderClean","orderSleep","simpleStates","state","className","includes","$f3a28973c4b422a0$var$icons","$f3a28973c4b422a0$var$iconHighlighted","icon","show","tempo","percent","time","clock","nextClock","spare","timeToHideModal","selectedIcon","addEventListener","$449d3644e80bad01$export$84d3005f3d0c36b5","$f3a28973c4b422a0$export$1744cb1794fd120a","requestAnimationFrame","setTimer","now","Date"],"version":3,"file":"index.36a67a3a.js.map"}